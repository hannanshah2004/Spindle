generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @unique
  email      String    @unique
  projects   Project[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Project {
  id        String    @id @default(uuid())
  name      String
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  sessions  Session[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([userId])
}

model Session {
  id                String    @id @default(uuid())
  containerId       String?   // Docker container ID (RESTORED)
  status            String    // e.g., 'running', 'stopped', 'error' (RESTORED)
  projectId         String
  project           Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  startUrl          String?   // Starting URL for the session
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  lastUsedAt        DateTime?
  actions           SessionAction[] // Relation to SessionAction model

  @@index([projectId])
}

model SessionAction {
  id          String    @id @default(uuid())
  sessionId   String
  session     Session   @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  actionType  String    // e.g., 'navigate', 'nlp', 'click', 'type', etc.
  details     String?   // e.g., URL, NLP instruction, selector
  status      String    // 'success' or 'failed'
  message     String?   // Optional message from the action result
  createdAt   DateTime  @default(now())

  @@index([sessionId])
}
